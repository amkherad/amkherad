name: Publish Resume

on:
  push:
    branches: ["main"]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      - name: Setup PDF generation
        run: |
          mkdir output
          mkdir output/webfonts
          cp -R _site/* output
          cp -R _site/assets/plugins/font-awesome/webfonts/* output/webfonts
          sed -i 's|"/amkherad/|"|g' output/index.html
          sed -i 's|"/amkherad/|"|g' output/print.html
          sed -i 's|../webfonts|webfonts|g' output/index.html
          sed -i 's|../webfonts|webfonts|g' output/print.html
          cd output
          ../scripts/inline-html.sh index.html index.inline.html
          ../scripts/inline-html.sh print.html print.inline.html
          sed -i 's|14px|15px|g' output/print.inline.html
          mv index.html index.html.bk
          mv print.inline.html index.html

        # cp _config.yml _config.yml.bk
        # sed -i -e 's/baseurl/#/g' _config.yml
          
      # Run the HTML to PDF converter action
      - name: Generate Resume PDF File
        uses: ferdinandkeller/html-to-pdf-action@v2
        with:
          source-path: "./output"
          destination-path: "./output/Resume.pdf"

      - name: Restore index file
        run: |
          cd output
          rm index.html
          mv index.html.bk index.html
      # - name: Restore the config file
      #   run: |
      #     rm _config.yml
      #     mv _config.yml.bk _config.yml

      # - name: Build with Jekyll for the second time
      #   uses: actions/jekyll-build-pages@v1
      #   with:
      #     source: ./
      #     destination: ./_site
  
      # - name: Move resume file to _site
      #   run: |
      #     cp -R _site/* output
  
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: output/

      # - name: Setup Ruby
      #   uses: ruby/setup-ruby@v1 # v1.146.0
      #   with:
      #     ruby-version: '3.1' # Not needed with a .ruby-version file
      #     bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      #     cache-version: 0 # Increment this number if you need to re-download cached gems
      # - name: Setup Pages
      #   id: pages
      #   uses: actions/configure-pages@v5
      # - name: Build with Jekyll
      #   # Outputs to the './_site' directory by default
      #   run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
      #   env:
      #     JEKYLL_ENV: production
      # - name: Generate Resume PDF File
      #   run: |
      #     curl --request POST --header "Content-Type: application/json" -o "./_site/Resume.pdf" "http://api.pdflayer.com/api/convert?access_key=${{ secrets.PDFGENERATOR_API_KEY }}&document_url=https%3A%2F%2Famkherad.ir%2Famkherad%2Fprint.html&page_size=A4&margin_top=10&margin_bottom=10&margin_left=&margin_right="

      # # Run the HTML to PDF converter action
      # - name: Generate Resume PDF File
      #   uses: ferdinandkeller/html-to-pdf-action@v2
      #   with:
      #     source-path: "./_site"
      #     destination-path: "./_site/Resume.pdf"

      # # Upload the PDF as an artifact
      # # - name: Upload PDF
      # #   uses: actions/upload-artifact@v4
      # #   with:
      # #     name: generated-pdf
      # #     path: ./out.pdf

      # - name: Upload artifact
      #   # Automatically uploads an artifact from the './_site' directory by default
      #   uses: actions/upload-pages-artifact@v3
      #   with:
      #     path: "./_site"

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
